class Solution {
    private static int solve(int[] arr, int target, int[] dp) {
        if (target == 0) {
            return 0;
        }
        if (target < 0) {
            return Integer.MAX_VALUE;
        }
        if (dp[target] != -1) {
            return dp[target];
        }

        int ans = Integer.MAX_VALUE;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] <= target) {
                int temp = solve(arr, target - arr[i], dp);
                if (temp != Integer.MAX_VALUE) {
                    ans = Math.min(ans, temp + 1);
                }
            }
        }
        dp[target] = ans;
        return ans;
    }

    public int coinChange(int[] num, int x) {
        int dp[] = new int[x + 1]; // Initialize with size x + 1
        Arrays.fill(dp, -1);
        Arrays.sort(num);
        int ans = solve(num, x, dp);
        return ans == Integer.MAX_VALUE ? -1 : ans;
    }
}
